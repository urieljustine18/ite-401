
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reminder App</title>

    <style>
        .container{
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            background-color: #f7f7f7;
        }

        .title{
            text-align: center;
        }

        .form{
            display: flex;
            margin: 20px;
        }

        .form input[type="text"]{
            flex: 1;
            padding: 5px;
        }

        .form button{
            margin-left: 10px;
            padding: 5px 10px;
            background-color: #2196f3;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .form button:hover{
            background-color: #0c86d7;
        }

        .reminder-list{
            margin-top: 20px;
            list-style-type: none;
            padding: 0;
        }

        .reminder-list li{
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            margin-top: 5px;
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .reminder-list span{
            flex: 1;
            margin-right: 10px;
        }

        .reminder-list li button{
            padding: 5px 10px;
            background-color: #dc3545;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .reminder-list button:hover{
            background-color: #c82333;
        }

        .modal{
            position: fixed;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 999;
        }

        .modal-content{
            max-width: 400px;
            padding: 20px;
            background-color: #fff;
            border-radius: 5px;
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/17.0.2/umd/react.development.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/17.0.2/umd/react-dom.development.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.26.0/babel.min.js"></script>
</head>
<body>
    <div id="app-root"></div>
    <script type="text/babel">
        function ReminderForm({addReminder}) {
            const [text, setText] = React.useState("");
            const handleSubmit = (e) => {
                e.preventDefault();
                if (text.trim() !== "") {
                    addReminder(text);
                    setText(""); // Clear the input after adding reminder
                }
            };

            return(
                <form className="form" onSubmit={handleSubmit}>
                    <input type="text" value={text} onChange={(e) => setText(e.target.value)} placeholder="Enter a reminder"/>
                    <button type="submit">Add Reminder</button>
                </form>
            );
        }

        function ReminderList({reminders, deleteReminder}) {
            return(
                <ul className="reminder-list">
                    {reminders.map((reminder, index) => (
                        <li key={index}>
                            <span>{reminder}</span>
                            <button onClick={() => deleteReminder(index)}>Delete</button>
                        </li>
                    ))}
                </ul>
            );
        }

        function App() {
            const [reminders, setReminders] = React.useState([]);
            const [showModal, setShowModal] = React.useState(false);
            const [currentReminder, setCurrentReminder] = React.useState("");

            const addReminder = (text) => {
                setReminders([...reminders, text]);
            };

            const deleteReminder = (index) => {
                const updatedReminders = [...reminders];
                updatedReminders.splice(index, 1);
                setReminders(updatedReminders);
            };

            React.useEffect(() => {
                const timer = setInterval(() => {
                    if (reminders.length > 0) {
                        setShowModal(true);
                    }
                }, 5000);
                return () => clearInterval(timer); // Clean up the timer
            }, [reminders]);

            const closeModal = () => {
                setShowModal(false);
                setCurrentReminder(""); // Clear the current reminder
            };

            const openModal = (reminder) => {
                setCurrentReminder(reminder);
                setShowModal(true);
            };

            return(
                <div className="container">
                    <h1 className="title">Reminder App</h1>
                    <ReminderForm addReminder={addReminder} />
                    {reminders.length > 0 ? (
                        <ReminderList reminders={reminders} deleteReminder={deleteReminder} />
                    ) : (
                        <p>No Reminders.</p>
                    )}

                    {showModal && (
                        <div className="modal">
                            <div className="modal-content">
                                <h2>Reminder</h2>
                                <p>{currentReminder}</p>
                                <button onClick={closeModal}>Close</button>
                            </div>
                        </div>
                    )}
                </div>
            );
        }

        ReactDOM.render(<App />, document.getElementById('app-root'));
    </script>
</body>
</html>
